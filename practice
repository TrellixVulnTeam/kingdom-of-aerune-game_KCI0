# list of item classes
p_lst = []
e_lst = []
# shop function that displays item types
item_labels = ["Weak Potion", "Potion", "Strong Potion", "Weak Elixir", "Elixir", "Strong Elixir"]


def display_shop_menu():
    c = 1
    for item in item_labels:
        print("{}. {}: {}".format(c, item, item.cost))
        c += 1


# function that takes input of item type chosen and generates new item with unique name/id

ids = generate_ids()


def player_choice():
    choice = input("What would ya like? ")
    id_count = 0
    while choice == "":
        choice = input("'Well?'")
    while not choice.isdigit():
        choice = input("'Well?' ")
    choice = int(choice)
    if choice == 1:
        i = Item("Potion of Light Wounds", 50, 50, types[1], _id=ids[id_count])
        id_count += 1
        return i
    elif choice == 2:
        i = Item("Potion of Moderate Wounds", 100, 100, types[1], _id=ids[id_count])
        id_count += 1
        return i
    elif choice == 3:
        i = Item("Potion of Heavy Wounds", 200, 200, types[1], _id=ids[id_count])
        id_count += 1
        return i
    elif choice == 4:
        i = Item("Weak Elixir", 50, 50, types[3], _id=ids[id_count])
        id_count += 1
        return i
    elif choice == 5:
        i = Item("Elixir", 100, 100, types[3], _id=ids[id_count])
        id_count += 1
        return i
    elif choice == 6:
        i = Item("Strong Elixir", 200, 200, types[3], _id=ids[id_count])
        id_count += 1
        return i




def enchantment_check(char):
    weapon = char.items["weapon"]
    try:
        weapons[weapon]
        return True
    except ValueError:
        return False


def enchant_weapon(char):
    weapon = char.items["weapon"]
    bool = enchantment_check(char)
    if bool:
        lst = ["White", "Red", "Black"]
        c = 1
        for l in lst:
            print("{}. {}".format(c, l))
            c += 1
        print("{}. Never you mind.".format(c))
        choice = input("Please select an enchantment: ")
        while choice == "":
            choice = input("'Well?'")
        while not choice.isdigit():
            choice = input("'Well?' ")
        choice = int(choice)
        if choice == 1:
            index = weapons[weapon]
            weapon = magic_weapons[index]
            char.items["weapon"] = weapon
        elif choice == 2:
            index = weapons[weapon]
            weapon = fire_weapons[index]
            char.items["weapon"] = weapon
        elif choice == 3:
            index = weapons[weapon]
            weapon = death_weapons[index]
            char.items["weapon"] = weapon
        elif choice == 4:
            return
    else:
        return


import pygame
from math import pi

BLACK = (0 , 0, 0)
WHITE = (255, 255, 255)
GREEN = (0, 255, 0)
RED = (255, 0, 0)
BLUE = (0, 0, 255)

PI = pi

pygame.init()

SIZE = (700, 500)
screen = pygame.display.set_mode(SIZE)
image = pygame.image.load('castle.jpeg').convert()

pygame.display.set_caption("KINGDOM OF AERUNE")

done = False

clock = pygame.time.Clock()


def display_border():
    pygame.draw.rect(screen, BLACK, [20, 20, 650, 450], 5)


def start_menu():
    lst = ["Start Game", "Load Game", "Quit"]
    t_font = pygame.font.SysFont('Calibri', 45, False, False)
    font = pygame.font.SysFont('Calibiri', 25, False, False)
    text = t_font.render("KINGDOM OF AERUNE", True, RED)
    screen.blit(text, [200, 100])
    screen.blit(image, [250, 150])
    c = 1
    a = 350
    for l in lst:
        text = font.render(str(c) + ". " + l, True, BLACK)
        screen.blit(text, [275, a])
        c += 1
        a += 20


while not done:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            done = True

    # GAME CODE

    screen.fill(WHITE)

    # DRAWING CODE

    #font = pygame.font.SysFont('Calibri', 25, True, False)
    #text = font.render("ERIC STINSON", True, BLACK)
    #screen.blit(text, [25, 25])
    display_border()
    start_menu()
    pygame.display.flip()

    clock.tick(60)

pygame.quit()
